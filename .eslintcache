[{"D:\\React\\event-management\\ems\\src\\index.js":"1","D:\\React\\event-management\\ems\\src\\App.js":"2","D:\\React\\event-management\\ems\\src\\components\\Header\\Header.js":"3","D:\\React\\event-management\\ems\\src\\components\\Footer\\Footer.js":"4","D:\\React\\event-management\\ems\\src\\components\\Sidebar\\Sidebar.js":"5","D:\\React\\event-management\\ems\\src\\screens\\EventRegisterScreen\\EventRegisterScreen.js":"6","D:\\React\\event-management\\ems\\src\\screens\\EventListScreen\\EventListScreen.js":"7","D:\\React\\event-management\\ems\\src\\screens\\AddEventScreen\\AddEventScreen.js":"8","D:\\React\\event-management\\ems\\src\\screens\\EventDetailScreen\\EventDetailScreen.js":"9","D:\\React\\event-management\\ems\\src\\screens\\VolunteerListScreen\\VolunteerListScreen.js":"10","D:\\React\\event-management\\ems\\src\\actions\\eventActions.js":"11","D:\\React\\event-management\\ems\\src\\constants\\eventConstants.js":"12","D:\\React\\event-management\\ems\\src\\store.js":"13","D:\\React\\event-management\\ems\\src\\reducers\\eventReducers.js":"14","D:\\React\\event-management\\ems\\src\\components\\Loader\\Loader.js":"15","D:\\React\\event-management\\ems\\src\\reducers\\volunteerReducers.js":"16","D:\\React\\event-management\\ems\\src\\constants\\volunteerConstants.js":"17","D:\\React\\event-management\\ems\\src\\actions\\volunteerActions.js":"18","D:\\React\\event-management\\ems\\src\\screens\\AddVolunteerScreen\\AddVolunteerScreen.js":"19","D:\\React\\event-management\\ems\\src\\utils\\SendHttpRequest.js":"20","D:\\React\\event-management\\ems\\src\\reducers\\participantReducers.js":"21","D:\\React\\event-management\\ems\\src\\constants\\participantConstants.js":"22","D:\\React\\event-management\\ems\\src\\screens\\ParticipantListScreen\\ParticipantListScreen.js":"23","D:\\React\\event-management\\ems\\src\\actions\\participantActions.js":"24","D:\\React\\event-management\\ems\\src\\reducers\\userReducers.js":"25","D:\\React\\event-management\\ems\\src\\constants\\userConstants.js":"26","D:\\React\\event-management\\ems\\src\\screens\\UserRegisterScreen\\UserRegisterScreen.js":"27","D:\\React\\event-management\\ems\\src\\actions\\userActions.js":"28","D:\\React\\event-management\\ems\\src\\screens\\UserLoginScreen\\UserLoginScreen.js":"29"},{"size":315,"mtime":1612368421504,"results":"30","hashOfConfig":"31"},{"size":2128,"mtime":1613556531539,"results":"32","hashOfConfig":"31"},{"size":991,"mtime":1613556366512,"results":"33","hashOfConfig":"31"},{"size":153,"mtime":1612010441764,"results":"34","hashOfConfig":"31"},{"size":1201,"mtime":1612770926330,"results":"35","hashOfConfig":"31"},{"size":1524,"mtime":1613556018379,"results":"36","hashOfConfig":"31"},{"size":2140,"mtime":1613555308154,"results":"37","hashOfConfig":"31"},{"size":3684,"mtime":1613555731140,"results":"38","hashOfConfig":"31"},{"size":2072,"mtime":1612785752176,"results":"39","hashOfConfig":"31"},{"size":2937,"mtime":1613561439364,"results":"40","hashOfConfig":"31"},{"size":4073,"mtime":1613555391893,"results":"41","hashOfConfig":"31"},{"size":710,"mtime":1612787855131,"results":"42","hashOfConfig":"31"},{"size":1115,"mtime":1612790761021,"results":"43","hashOfConfig":"31"},{"size":2954,"mtime":1613555273932,"results":"44","hashOfConfig":"31"},{"size":2132,"mtime":1612419832502,"results":"45","hashOfConfig":"31"},{"size":1613,"mtime":1612763397348,"results":"46","hashOfConfig":"31"},{"size":603,"mtime":1612426547420,"results":"47","hashOfConfig":"31"},{"size":2527,"mtime":1612933025144,"results":"48","hashOfConfig":"31"},{"size":3253,"mtime":1613557121669,"results":"49","hashOfConfig":"31"},{"size":1405,"mtime":1612932258465,"results":"50","hashOfConfig":"31"},{"size":1055,"mtime":1612765705963,"results":"51","hashOfConfig":"31"},{"size":199,"mtime":1612762474606,"results":"52","hashOfConfig":"31"},{"size":1716,"mtime":1612765720042,"results":"53","hashOfConfig":"31"},{"size":952,"mtime":1612765185806,"results":"54","hashOfConfig":"31"},{"size":1353,"mtime":1612936962346,"results":"55","hashOfConfig":"31"},{"size":352,"mtime":1612790332208,"results":"56","hashOfConfig":"31"},{"size":2568,"mtime":1612934881685,"results":"57","hashOfConfig":"31"},{"size":2052,"mtime":1613554768027,"results":"58","hashOfConfig":"31"},{"size":2386,"mtime":1612937220583,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1v14fpa",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"62"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"62"},"D:\\React\\event-management\\ems\\src\\index.js",[],["133","134"],"D:\\React\\event-management\\ems\\src\\App.js",[],"D:\\React\\event-management\\ems\\src\\components\\Header\\Header.js",["135"],"import React, {useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Styles from \"./Header.module.scss\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <>\r\n            <div className={Styles.Logo}>\r\n                <span>Events</span>\r\n            </div>\r\n\r\n            <div className={Styles.UserNav}>\r\n                {props.userInfo \r\n                ? <Link to='/logout' className={Styles.LinkItem}>Logout</Link>\r\n                : (\r\n                    <>\r\n                        <Link to='/register' className={Styles.LinkItem}>Register</Link>\r\n                        <Link to='/login' className={Styles.LinkItem}>Login</Link>\r\n                    </>\r\n                  )\r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userInfo: state.userRegister.userInfo\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Header)\r\n","D:\\React\\event-management\\ems\\src\\components\\Footer\\Footer.js",[],["136","137"],"D:\\React\\event-management\\ems\\src\\components\\Sidebar\\Sidebar.js",[],"D:\\React\\event-management\\ems\\src\\screens\\EventRegisterScreen\\EventRegisterScreen.js",["138"],"import React,{useEffect} from 'react';\r\nimport Styles from './EventRegisterScreen.module.scss';\r\nimport {connect} from 'react-redux';\r\n\r\nconst EventRegisterScreen = (props) => {\r\n\r\n    useEffect(() => {\r\n        if(!props.userInfo){\r\n            props.history.push('/register')\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className={Styles.FormContainer}>\r\n            <form className={Styles.Form}>\r\n            <h1 className={Styles.HeadingPrimary}>Event Registration</h1>\r\n                <div className={Styles.InputContainer}>\r\n                    <label className={Styles.InputLabel}>Username</label>\r\n                    <input type='text' className={Styles.Input} placeholder='' value=''/>\r\n                </div>\r\n                <div className={Styles.InputContainer}>\r\n                    <label className={Styles.InputLabel}>Email</label>\r\n                    <input type='email' className={Styles.Input} placeholder='' value=''/>\r\n                </div>\r\n                <div className={Styles.InputContainer}>\r\n                    <label className={Styles.InputLabel}>Contact</label>\r\n                    <input type='number' className={Styles.Input} placeholder='' value=''/>\r\n                </div>\r\n                <button type='submit' className={Styles.Btn}>Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userInfo: state.userRegister.userInfo\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(EventRegisterScreen);\r\n","D:\\React\\event-management\\ems\\src\\screens\\EventListScreen\\EventListScreen.js",["139"],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { listEvents, deleteEvent } from '../../actions/eventActions';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Styles from './EventListScreen.module.scss';\r\nimport Loader from '../../components/Loader/Loader';\r\n\r\nconst EventListScreen = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.onListEvents();\r\n    }, []);\r\n\r\n    const deleteHandler = (event, id) => {\r\n        event.preventDefault();\r\n        props.onDeleteEvent(id);\r\n    }\r\n\r\n    return (\r\n        <div className={Styles.EventContainer}>\r\n            {props.loading || props.deleteLoading ? <Loader/> : \r\n            \r\n                <div className={Styles.Content}>\r\n                    <h1 className={Styles.HeadingPrimary}>All Events</h1>\r\n                    <ul className={Styles.EventList}>\r\n                        {props.listEvents.map(event => (\r\n                                <li className={Styles.EventItem} key={event.time + event.name}>\r\n                                <Link to={`/event/${event._id}/`} className={Styles.EventLink}>{event.name}</Link>\r\n                                <button className={Styles.Btn} onClick={(e) => deleteHandler(e,event._id)}>\r\n                                    <i className='fas fa-trash'></i>\r\n                                </button>\r\n                                </li>\r\n                        ))}\r\n                    </ul>\r\n                    <Link to='/addevent' className={Styles.AddBtn}>\r\n                        <i className=\"fa fa-plus\"></i>\r\n                        <span>Add Event</span></Link>\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        listEvents: state.eventList.events,\r\n        loading: state.eventList.loading,\r\n        deleteLoading: state.eventDelete.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onListEvents: () => dispatch(listEvents()),\r\n        onDeleteEvent: (id) => dispatch(deleteEvent(id))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EventListScreen);\r\n","D:\\React\\event-management\\ems\\src\\screens\\AddEventScreen\\AddEventScreen.js",["140"],"import React, { useState, useEffect } from 'react';\r\nimport { createEvent } from '../../actions/eventActions';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Styles from './AddEventScreen.module.scss';\r\n\r\nconst AddEventScreen = (props) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [startdate, setStartdate] = useState('');\r\n    const [enddate, setEnddate] = useState('');\r\n    const [organizer, setOrganizer] = useState('');\r\n\r\n    useEffect(() => {\r\n        if(!props.userInfo){\r\n            props.history.push('/register')\r\n        }\r\n    }, [])\r\n\r\n    const formSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        props.onEventCreate(\r\n            {\r\n             name, description, startdate, enddate, organizer\r\n            }\r\n        )\r\n        props.history.push('/events');\r\n    }\r\n\r\n    return (\r\n        <div className={Styles.FormContainer}>\r\n            <form className={Styles.Form} onSubmit={formSubmitHandler}>\r\n                <h1 className={Styles.HeadingPrimary}>Add Event</h1>\r\n                <div className={Styles.InputContainer}>\r\n                    <label className={Styles.InputLabel}>Name</label>\r\n                    <input\r\n                        type='text'\r\n                        className={Styles.Input}\r\n                        placeholder={name}\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)} />\r\n                </div>\r\n\r\n                <div className={Styles.InputContainer}>\r\n                    <label className={Styles.InputLabel}>Description</label>\r\n                    <textarea\r\n                        className={Styles.Input}\r\n                        placeholder={description}\r\n                        value={description}\r\n                        onChange={(e) => setDescription(e.target.value)}></textarea>\r\n                </div>\r\n\r\n                <div className={Styles.InputContainer}>\r\n                    <label className={Styles.InputLabel}>Start Date</label>\r\n                    <input\r\n                        type='date'\r\n                        className={Styles.Input}\r\n                        placeholder={startdate}\r\n                        value={startdate}\r\n                        onChange={(e) => setStartdate(e.target.value)} />\r\n                </div>\r\n                <div className={Styles.InputContainer}>\r\n                    <label className={Styles.InputLabel}>End date</label>\r\n                    <input\r\n                        type='date'\r\n                        className={Styles.Input}\r\n                        placeholder={enddate}\r\n                        value={enddate}\r\n                        onChange={(e) => setEnddate(e.target.value)} />\r\n                </div>\r\n                <div className={Styles.InputContainer}>\r\n                    <label className={Styles.InputLabel}>Organizer</label>\r\n                    <input\r\n                        type='text'\r\n                        className={Styles.Input}\r\n                        placeholder={organizer}\r\n                        value={organizer}\r\n                        onChange={(e) => setOrganizer(e.target.value)} />\r\n                </div>\r\n                <button type='submit' className={Styles.Btn}>Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userInfo: state.userRegister.userInfo\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onEventCreate: (event) => dispatch(createEvent(event))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddEventScreen);\r\n","D:\\React\\event-management\\ems\\src\\screens\\EventDetailScreen\\EventDetailScreen.js",["141"],"import React, {useEffect} from 'react';\r\nimport Styles from './EventDetailScreen.module.scss';\r\nimport img1 from '../../images/music.jpg';\r\nimport { Link } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {eventDetails} from '../../actions/eventActions';\r\n\r\nconst EventDetailScreen = (props) => {\r\n    const id = props.match.params.id;\r\n    console.log(id)\r\n\r\n    useEffect(() => {\r\n        props.onEventDetails(id);\r\n    },[props.match.params.id])\r\n\r\n    console.log(props.event)\r\n\r\n    return (\r\n        <>\r\n            <div className={Styles.Hero}>\r\n                <h2 className={Styles.SecondaryHeading}>\r\n                   <span> Unplugged Festival</span>\r\n                </h2>\r\n            </div>\r\n            <div className={Styles.Container}>\r\n                <div className={Styles.LeftContainer}>\r\n                    <img src={img1} alt='music'/>\r\n                </div>\r\n                <div className={Styles.RightContainer}>\r\n                    <h1 className={Styles.HeadingPrimary}>\r\n                        {props.event.name}\r\n                    </h1>\r\n                    <p className={Styles.Meta}> <span>Start Date:</span> {props.event.startdate}</p>\r\n                    <p className={Styles.Meta}> <span>End Date:</span> {props.event.enddate}</p>\r\n                    <p className={Styles.Meta}> <span>Organized By:</span> {props.event.organizer}</p>\r\n                </div>\r\n            </div>\r\n            <div className={Styles.Description}>\r\n                <p className={Styles.Desc}>\r\n                    {props.event.description}\r\n                </p>\r\n                <Link to={`/event/${props.event._id}/register/`} className={Styles.Btn}>Register</Link>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n   return {\r\n        event: state.eventDetails.event\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onEventDetails: (id) => dispatch(eventDetails(id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EventDetailScreen);\r\n","D:\\React\\event-management\\ems\\src\\screens\\VolunteerListScreen\\VolunteerListScreen.js",["142"],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { listVolunteers } from '../../actions/volunteerActions';\r\nimport Styles from './VolunteerListScreen.module.scss';\r\nimport Loader from '../../components/Loader/Loader';\r\n\r\nconst VolunteerListScreen = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.onListVolunteers();\r\n    },[props.onListVolunteers]);\r\n\r\n    return (\r\n        <div className={Styles.VolunteerContainer}>\r\n            {props.loading ? <Loader/> : (\r\n                <div className={Styles.Content}>\r\n                    <h1 className={Styles.HeadingPrimary}>All Volunteers</h1>\r\n                    <ul className={Styles.VolunteerList}>\r\n                        <li className={Styles.VolunteerItem}>\r\n                            <Link to='' className={Styles.VolunteerLink}>John Ducket</Link>\r\n                            <button className={Styles.Btn}>\r\n                                <i className='fas fa-trash'></i>\r\n                            </button>\r\n                        </li>\r\n                        <li className={Styles.VolunteerItem}>\r\n                            <Link to='' className={Styles.VolunteerLink}>Shiv Mishra</Link>\r\n                            <button className={Styles.Btn}>\r\n                                <i className='fas fa-trash'></i>\r\n                            </button>\r\n                        </li>\r\n                        <li className={Styles.VolunteerItem}>\r\n                            <Link to='' className={Styles.VolunteerLink}>Super Saf</Link>\r\n                            <button className={Styles.Btn}>\r\n                                <i className='fas fa-trash'></i>\r\n                            </button>\r\n                        </li>\r\n                        {props.volunteers.map(volunteer => (\r\n                            <li className={Styles.VolunteerItem} key={volunteer._id}>\r\n                            <Link to='/volunteer/1' className={Styles.VolunteerLink}>{volunteer.name}</Link>\r\n                            <button className={Styles.Btn}>\r\n                                <i className='fas fa-trash'></i>\r\n                            </button>\r\n                        </li>\r\n                        ))}\r\n                    </ul>\r\n                    <Link to='/addvolunteer' className={Styles.AddBtn}>\r\n                        <i className=\"fa fa-plus\"></i>\r\n                        <span>Add Volunteer</span></Link>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        volunteers: state.volunteerList.volunteers,\r\n        loading: state.volunteerList.loading\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onListVolunteers: () => dispatch(listVolunteers())\r\n    }\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VolunteerListScreen);","D:\\React\\event-management\\ems\\src\\actions\\eventActions.js",["143"],"import axios from 'axios';\r\nimport SendHttpRequest from '../utils/SendHttpRequest';\r\nimport {\r\n    EVENT_LIST_REQUEST,\r\n    EVENT_LIST_SUCCESS,\r\n    EVENT_LIST_FAIL,\r\n    EVENT_CREATE_REQUEST,\r\n    EVENT_CREATE_SUCCESS,\r\n    EVENT_CREATE_FAIL,\r\n    EVENT_DETAILS_REQUEST,\r\n    EVENT_DETAILS_SUCCESS,\r\n    EVENT_DETAILS_FAIL,\r\n    EVENT_DELETE_REQUEST,\r\n    EVENT_DELETE_SUCCESS,\r\n    EVENT_DELETE_FAIL\r\n} from '../constants/eventConstants';\r\n\r\nexport const listEvents = () => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({ type: EVENT_LIST_REQUEST });\r\n\r\n            // let {data} = await axios.get('/admin/events');\r\n            let data = await SendHttpRequest('GET', '/admin/events');\r\n            console.log(data);\r\n\r\n            // fetching data into array.\r\n            const fetchedEvents = [];\r\n            for(let key in data.events){\r\n                fetchedEvents.push(data.events[key])\r\n            }  \r\n\r\n            dispatch({\r\n                type: EVENT_LIST_SUCCESS,\r\n                payload: fetchedEvents\r\n            })\r\n\r\n             // Saving the events to the local storage\r\n            // let eventList = {};\r\n            // for (let event of fetchedEvents){\r\n            //     eventList[event._id] = {...event}\r\n            // }\r\n            localStorage.setItem('events', JSON.stringify(fetchedEvents));\r\n\r\n        } catch (error) {\r\n            dispatch({\r\n                type: EVENT_LIST_FAIL,\r\n                payload: error\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport const eventDetails = (id) => {\r\n    return async dispatch => {\r\n        try{\r\n            dispatch({type: EVENT_DETAILS_REQUEST});\r\n            console.log(id)\r\n            const eventsFetchedFromLocalStorage = JSON.parse(localStorage.getItem('events'));\r\n            const event = eventsFetchedFromLocalStorage.find(event => {\r\n                console.log(event._id)\r\n                return id === event._id\r\n            })\r\n\r\n            console.log(event)\r\n\r\n            dispatch({type: EVENT_DETAILS_SUCCESS, payload: event});\r\n        }catch(err) {\r\n            dispatch({type:EVENT_DETAILS_FAIL, error: err})\r\n        }\r\n    }\r\n}\r\n\r\nexport const createEvent = (event) => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({ type: EVENT_CREATE_REQUEST });\r\n            let url = '';\r\n            // url = 'https://eventmanagement-40f98-default-rtdb.firebaseio.com/events.json';\r\n            url = \"/admin/add-event/\";\r\n\r\n            // const config = {     \r\n            //     headers: { 'content-type': 'application/x-www-form-urlencoded' }\r\n            // }\r\n\r\n            let eventData = new FormData();\r\n           \r\n            eventData.append('name', event['name'])\r\n            eventData.append('description', event['description'])\r\n            eventData.append('startdate', event['startdate'])\r\n            eventData.append('enddate', event['enddate'])\r\n            eventData.append('organizer', event['organizer'])\r\n\r\n            // const { data } = await axios.post(url, eventData, config);\r\n            const data = await SendHttpRequest('POST', url, eventData);\r\n\r\n            const fetchedEvents = [];\r\n            for (let key in data){\r\n                fetchedEvents.push({\r\n                    ...data[key]\r\n                });\r\n            }\r\n            dispatch({\r\n                type: EVENT_CREATE_SUCCESS,\r\n                payload: fetchedEvents\r\n            });\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch({ type: EVENT_CREATE_FAIL, error: error });\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteEvent = (id) => {\r\n    return async dispatch => {\r\n        try{\r\n            dispatch({type: EVENT_DELETE_REQUEST});\r\n\r\n            // await axios.delete(`admin/delete-event/${id}`);\r\n            await SendHttpRequest('DELETE', `admin/delete-event/${id}`);\r\n            dispatch(listEvents())\r\n\r\n            dispatch({type: EVENT_DELETE_SUCCESS});\r\n        }catch(error){\r\n            dispatch({type: EVENT_DELETE_FAIL, error: error})\r\n        }\r\n    }\r\n}","D:\\React\\event-management\\ems\\src\\constants\\eventConstants.js",[],"D:\\React\\event-management\\ems\\src\\store.js",[],"D:\\React\\event-management\\ems\\src\\reducers\\eventReducers.js",[],"D:\\React\\event-management\\ems\\src\\components\\Loader\\Loader.js",[],"D:\\React\\event-management\\ems\\src\\reducers\\volunteerReducers.js",[],"D:\\React\\event-management\\ems\\src\\constants\\volunteerConstants.js",[],"D:\\React\\event-management\\ems\\src\\actions\\volunteerActions.js",["144","145","146","147"],"import axios from 'axios';\r\nimport SendHttpRequest from '../utils/SendHttpRequest';\r\n\r\nimport {\r\n    VOLUNTEER_LIST_REQUEST,\r\n    VOLUNTEER_LIST_SUCCESS,\r\n    VOLUNTEER_LIST_FAIL,\r\n    VOLUNTEER_CREATE_REQUEST,\r\n    VOLUNTEER_CREATE_SUCCESS,\r\n    VOLUNTEER_CREATE_FAIL,\r\n    VOLUNTEER_DETAILS_REQUEST,\r\n    VOLUNTEER_DETAILS_SUCCESS,\r\n    VOLUNTEER_DETAILS_FAIL\r\n} from '../constants/volunteerConstants';\r\n\r\nexport const listVolunteers = () => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({ type: VOLUNTEER_LIST_REQUEST });\r\n\r\n            // let {data} = await axios.get('/admin/volunteers');\r\n            let data = await SendHttpRequest('GET', '/admin/volunteers');\r\n\r\n            const fetchedVolunteer = [];\r\n            for(let key in data.volunteers){\r\n                fetchedVolunteer.push(data.volunteers[key])\r\n            }  \r\n\r\n            dispatch({\r\n                type: VOLUNTEER_LIST_SUCCESS,\r\n                payload: fetchedVolunteer\r\n            })\r\n\r\n         \r\n        } catch (error) {\r\n            console.log(error)\r\n            dispatch({\r\n                type: VOLUNTEER_LIST_FAIL,\r\n                payload: error\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\nexport const createVolunteer = (volunteer) => {\r\n    return async dispatch => {\r\n        try{\r\n            dispatch({type: VOLUNTEER_CREATE_REQUEST});\r\n\r\n\r\n            let url = '';\r\n            url = \"/admin/add-volunteer/\";\r\n\r\n            // const config = {     \r\n            //     headers: { 'content-type': 'application/x-www-form-urlencoded' }\r\n            // }\r\n\r\n            let volunteerData = new FormData();\r\n           \r\n            volunteerData.append('name', volunteer['name'])\r\n            volunteerData.append('email', volunteer['email'])\r\n            volunteerData.append('password', volunteer['password'])\r\n            volunteerData.append('type', volunteer['type'])\r\n\r\n            // const { data } = await axios.post(url, volunteerData, config);\r\n            const data = await SendHttpRequest('POST', url, volunteerData);\r\n\r\n            const fetchedVolunteers = [];\r\n            for (let key in data){\r\n                fetchedVolunteers.push({\r\n                    ...data[key]\r\n                });\r\n            }\r\n            dispatch({\r\n                type: VOLUNTEER_CREATE_SUCCESS,\r\n                payload: fetchedVolunteers\r\n            });\r\n        }catch(error){\r\n            console.log(error);\r\n            dispatch({type: VOLUNTEER_CREATE_FAIL, error: error});\r\n        }\r\n    }\r\n}\r\n","D:\\React\\event-management\\ems\\src\\screens\\AddVolunteerScreen\\AddVolunteerScreen.js",["148"],"import React, { useState, useEffect } from 'react';\r\nimport { createVolunteer } from '../../actions/volunteerActions';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Styles from './AddVolunteerScreen.module.scss';\r\n\r\nconst AddVolunteerScreen = (props) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [type, setType] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    // const [events, setEvents] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if(!props.userInfo){\r\n            props.history.push('/register')\r\n        }\r\n    }, [])\r\n\r\n    const formSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        props.onVolunteerCreate(\r\n            {\r\n             name, email, type, password\r\n            }\r\n        )\r\n        props.history.push('/volunteers');\r\n    }\r\n\r\n    return (\r\n        <div className={Styles.FormContainer}>\r\n            <form className={Styles.Form} onSubmit={formSubmitHandler}>\r\n                <h1 className={Styles.HeadingPrimary}>Add Volunteer</h1>\r\n                <div className={Styles.InputContainer}>\r\n                    <label className={Styles.InputLabel}>Name</label>\r\n                    <input\r\n                        type='text'\r\n                        className={Styles.Input}\r\n                        placeholder={name}\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)} />\r\n                </div>\r\n\r\n                <div className={Styles.InputContainer}>\r\n                    <label className={Styles.InputLabel}>Email</label>\r\n                    <input\r\n                        type='email'\r\n                        className={Styles.Input}\r\n                        placeholder={email}\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}/>\r\n                </div>\r\n\r\n                <div className={Styles.InputContainer}>\r\n                    <label className={Styles.InputLabel}>Password</label>\r\n                    <input\r\n                        type='password'\r\n                        className={Styles.Input}\r\n                        placeholder={password}\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)} />\r\n                </div>\r\n               \r\n                <div className={Styles.InputContainer}>\r\n                    <label className={Styles.InputLabel}>Type</label>\r\n                    <input\r\n                        type='text'\r\n                        className={Styles.Input}\r\n                        placeholder={type}\r\n                        value={type}\r\n                        onChange={(e) => setType(e.target.value)} />\r\n                </div>\r\n                <button type='submit' className={Styles.Btn}>Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userInfo: state.userRegister.userInfo\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onVolunteerCreate: (volunteer) => dispatch(createVolunteer(volunteer))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddVolunteerScreen);\r\n","D:\\React\\event-management\\ems\\src\\utils\\SendHttpRequest.js",[],["149","150"],"D:\\React\\event-management\\ems\\src\\reducers\\participantReducers.js",[],"D:\\React\\event-management\\ems\\src\\constants\\participantConstants.js",[],"D:\\React\\event-management\\ems\\src\\screens\\ParticipantListScreen\\ParticipantListScreen.js",["151"],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { listParticipants } from '../../actions/participantActions';\r\nimport Styles from './ParticipantListScreen.module.scss';\r\nimport Loader from '../../components/Loader/Loader';\r\n\r\nconst ParticipantListScreen = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.onListParticipants();\r\n    },[props.onListParticipants]);\r\n\r\n    return (\r\n        <div className={Styles.ParticipantContainer}>\r\n            {props.loading ? <Loader/> : (\r\n                <div className={Styles.Content}>\r\n                    <h1 className={Styles.HeadingPrimary}>All Participants</h1>\r\n                    <ul className={Styles.ParticipantList}>\r\n                        {props.participants.map(participant => (\r\n                            <li className={Styles.ParticipantItem}>\r\n                            <Link to='/participant/1' className={Styles.ParticipantLink}>{participant.name}</Link>\r\n                            <button className={Styles.Btn}>\r\n                                <i className='fas fa-trash'></i>\r\n                            </button>\r\n                        </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        participants: state.participantList.participants,\r\n        loading: state.participantList.loading\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onListParticipants: () => dispatch(listParticipants())\r\n    }\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ParticipantListScreen);","D:\\React\\event-management\\ems\\src\\actions\\participantActions.js",[],"D:\\React\\event-management\\ems\\src\\reducers\\userReducers.js",[],"D:\\React\\event-management\\ems\\src\\constants\\userConstants.js",[],"D:\\React\\event-management\\ems\\src\\screens\\UserRegisterScreen\\UserRegisterScreen.js",["152"],"import React, {useState, useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { userRegister } from '../../actions/userActions';\r\n\r\nimport Styles from './UserRegisterScreen.module.scss';\r\n\r\nconst UserRegisterScreen = (props) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isVolunteer, setIsVolunteer] = useState(false);\r\n\r\n\r\n    const formSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        props.onUserRegister(\r\n            {\r\n             name, email, password, isVolunteer\r\n            }\r\n        )\r\n        props.history.push('/login');\r\n    }\r\n\r\n    return (\r\n        <div className={Styles.FormContainer}>\r\n            <form className={Styles.Form} onSubmit={formSubmitHandler}>\r\n            <h1 className={Styles.HeadingPrimary}>User Registration</h1>\r\n                <div className={Styles.InputContainer}>\r\n                    <label className={Styles.InputLabel}>Username</label>\r\n                    <input type='text' className={Styles.Input} placeholder='Username' value={name} onChange={(e) => setName(e.target.value)}/>\r\n                </div>\r\n                <div className={Styles.InputContainer}>\r\n                    <label className={Styles.InputLabel}>Email</label>\r\n                    <input type='email' className={Styles.Input} placeholder='Email' value={email}  onChange={(e) => setEmail(e.target.value)}/>\r\n                </div>\r\n                <div className={Styles.InputContainer}>\r\n                    <label className={Styles.InputLabel}>Password</label>\r\n                    <input type='password' className={Styles.Input} placeholder='Password' value={password}  onChange={(e) => setPassword(e.target.value)}/>\r\n                </div>\r\n                <div className={Styles.InputContainer}>\r\n                    <div className={Styles.CheckBoxContainer}>\r\n                        <label className={Styles.InputLabel}>Is Volunteer</label>\r\n                        <input type='checkbox' className={Styles.CheckBox}  name='IsVolunteer' value={isVolunteer}  onChange={(e) => setIsVolunteer(prev=> !prev)}/>\r\n                    </div>\r\n                </div>\r\n                <button type='submit' className={Styles.Btn}>Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onUserRegister: (user) => dispatch(userRegister(user)) \r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(UserRegisterScreen);\r\n","D:\\React\\event-management\\ems\\src\\actions\\userActions.js",[],"D:\\React\\event-management\\ems\\src\\screens\\UserLoginScreen\\UserLoginScreen.js",["153","154"],"import React, {useState, useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { userLogin } from '../../actions/userActions';\r\nimport Loader from '../../components/Loader/Loader';\r\n\r\nimport Styles from './UserLoginScreen.module.scss';\r\n\r\nconst UserLoginScreen = (props) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isVolunteer, setIsVolunteer] = useState(false);\r\n\r\n\r\n    const formSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        props.onUserLogin(\r\n            {\r\n              email, password, isVolunteer\r\n            }\r\n        )\r\n        props.history.push('/');\r\n    }\r\n\r\n    return (\r\n        <div className={Styles.FormContainer}>\r\n            {props.loading && <Loader/>}\r\n            <form className={Styles.Form} onSubmit={formSubmitHandler}>\r\n            <h1 className={Styles.HeadingPrimary}>User Login</h1>\r\n                <div className={Styles.InputContainer}>\r\n                    <label className={Styles.InputLabel}>Email</label>\r\n                    <input type='email' className={Styles.Input} placeholder='Email' value={email}  onChange={(e) => setEmail(e.target.value)}/>\r\n                </div>\r\n                <div className={Styles.InputContainer}>\r\n                    <label className={Styles.InputLabel}>Password</label>\r\n                    <input type='password' className={Styles.Input} placeholder='Password' value={password}  onChange={(e) => setPassword(e.target.value)}/>\r\n                </div>\r\n                <div className={Styles.InputContainer}>\r\n                    <div className={Styles.CheckBoxContainer}>\r\n                        <label className={Styles.InputLabel}>Is Volunteer</label>\r\n                        <input type='checkbox' className={Styles.CheckBox}  name='IsVolunteer' value={isVolunteer}  onChange={(e) => setIsVolunteer(prev=> !prev)}/>\r\n                    </div>\r\n                </div>\r\n                <button type='submit' className={Styles.Btn}>Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.userLogin.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onUserLogin: (user) => dispatch(userLogin(user)) \r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(UserLoginScreen);\r\n",{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":1,"column":16,"nodeType":"161","messageId":"162","endLine":1,"endColumn":25},{"ruleId":"155","replacedBy":"163"},{"ruleId":"157","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":11,"column":8,"nodeType":"167","endLine":11,"endColumn":10,"suggestions":"168"},{"ruleId":"165","severity":1,"message":"169","line":13,"column":8,"nodeType":"167","endLine":13,"endColumn":10,"suggestions":"170"},{"ruleId":"165","severity":1,"message":"166","line":19,"column":8,"nodeType":"167","endLine":19,"endColumn":10,"suggestions":"171"},{"ruleId":"165","severity":1,"message":"172","line":15,"column":7,"nodeType":"167","endLine":15,"endColumn":30,"suggestions":"173"},{"ruleId":"165","severity":1,"message":"169","line":13,"column":7,"nodeType":"167","endLine":13,"endColumn":31,"suggestions":"174"},{"ruleId":"159","severity":1,"message":"175","line":1,"column":8,"nodeType":"161","messageId":"162","endLine":1,"endColumn":13},{"ruleId":"159","severity":1,"message":"175","line":1,"column":8,"nodeType":"161","messageId":"162","endLine":1,"endColumn":13},{"ruleId":"159","severity":1,"message":"176","line":11,"column":5,"nodeType":"161","messageId":"162","endLine":11,"endColumn":30},{"ruleId":"159","severity":1,"message":"177","line":12,"column":5,"nodeType":"161","messageId":"162","endLine":12,"endColumn":30},{"ruleId":"159","severity":1,"message":"178","line":13,"column":5,"nodeType":"161","messageId":"162","endLine":13,"endColumn":27},{"ruleId":"165","severity":1,"message":"166","line":19,"column":8,"nodeType":"167","endLine":19,"endColumn":10,"suggestions":"179"},{"ruleId":"155","replacedBy":"180"},{"ruleId":"157","replacedBy":"181"},{"ruleId":"165","severity":1,"message":"169","line":13,"column":7,"nodeType":"167","endLine":13,"endColumn":33,"suggestions":"182"},{"ruleId":"159","severity":1,"message":"160","line":1,"column":26,"nodeType":"161","messageId":"162","endLine":1,"endColumn":35},{"ruleId":"159","severity":1,"message":"160","line":1,"column":26,"nodeType":"161","messageId":"162","endLine":1,"endColumn":35},{"ruleId":"159","severity":1,"message":"183","line":50,"column":7,"nodeType":"161","messageId":"162","endLine":50,"endColumn":22},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",["184"],["185"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.history' and 'props.userInfo'. Either include them or remove the dependency array.","ArrayExpression",["186"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["187"],["188"],"React Hook useEffect has missing dependencies: 'id' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["189"],["190"],"'axios' is defined but never used.","'VOLUNTEER_DETAILS_REQUEST' is defined but never used.","'VOLUNTEER_DETAILS_SUCCESS' is defined but never used.","'VOLUNTEER_DETAILS_FAIL' is defined but never used.",["191"],["184"],["185"],["192"],"'mapStateToProps' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"193","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"193","fix":"202"},{"desc":"203","fix":"204"},"Update the dependencies array to be: [props.history, props.userInfo]",{"range":"205","text":"206"},"Update the dependencies array to be: [props]",{"range":"207","text":"208"},{"range":"209","text":"206"},"Update the dependencies array to be: [id, props, props.match.params.id]",{"range":"210","text":"211"},"Update the dependencies array to be: [props, props.onListVolunteers]",{"range":"212","text":"213"},{"range":"214","text":"206"},"Update the dependencies array to be: [props, props.onListParticipants]",{"range":"215","text":"216"},[297,299],"[props.history, props.userInfo]",[408,410],"[props]",[618,620],[448,471],"[id, props, props.match.params.id]",[414,438],"[props, props.onListVolunteers]",[611,613],[424,450],"[props, props.onListParticipants]"]