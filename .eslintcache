[{"D:\\React\\event-management\\ems\\src\\index.js":"1","D:\\React\\event-management\\ems\\src\\App.js":"2","D:\\React\\event-management\\ems\\src\\components\\Header\\Header.js":"3","D:\\React\\event-management\\ems\\src\\components\\Footer\\Footer.js":"4","D:\\React\\event-management\\ems\\src\\components\\Sidebar\\Sidebar.js":"5","D:\\React\\event-management\\ems\\src\\screens\\EventRegisterScreen\\EventRegisterScreen.js":"6","D:\\React\\event-management\\ems\\src\\screens\\EventListScreen\\EventListScreen.js":"7","D:\\React\\event-management\\ems\\src\\screens\\AddEventScreen\\AddEventScreen.js":"8","D:\\React\\event-management\\ems\\src\\screens\\EventDetailScreen\\EventDetailScreen.js":"9","D:\\React\\event-management\\ems\\src\\screens\\VolunteerListScreen\\VolunteerListScreen.js":"10","D:\\React\\event-management\\ems\\src\\actions\\eventActions.js":"11","D:\\React\\event-management\\ems\\src\\constants\\eventConstants.js":"12","D:\\React\\event-management\\ems\\src\\store.js":"13","D:\\React\\event-management\\ems\\src\\reducers\\eventReducers.js":"14","D:\\React\\event-management\\ems\\src\\components\\Loader\\Loader.js":"15","D:\\React\\event-management\\ems\\src\\reducers\\volunteerReducers.js":"16","D:\\React\\event-management\\ems\\src\\constants\\volunteerConstants.js":"17","D:\\React\\event-management\\ems\\src\\actions\\volunteerActions.js":"18","D:\\React\\event-management\\ems\\src\\screens\\AddVolunteerScreen\\AddVolunteerScreen.js":"19","D:\\React\\event-management\\ems\\src\\utils\\SendHttpRequest.js":"20","D:\\React\\event-management\\ems\\src\\reducers\\participantReducers.js":"21","D:\\React\\event-management\\ems\\src\\constants\\participantConstants.js":"22","D:\\React\\event-management\\ems\\src\\screens\\ParticipantListScreen\\ParticipantListScreen.js":"23","D:\\React\\event-management\\ems\\src\\actions\\participantActions.js":"24","D:\\React\\event-management\\ems\\src\\reducers\\userReducers.js":"25","D:\\React\\event-management\\ems\\src\\constants\\userConstants.js":"26","D:\\React\\event-management\\ems\\src\\screens\\UserRegisterScreen\\UserRegisterScreen.js":"27","D:\\React\\event-management\\ems\\src\\actions\\userActions.js":"28","D:\\React\\event-management\\ems\\src\\screens\\UserLoginScreen\\UserLoginScreen.js":"29","D:\\React\\event-management\\ems\\src\\screens\\UserDetailScreen\\UserDetailScreen.js":"30"},{"size":315,"mtime":1612368421504,"results":"31","hashOfConfig":"32"},{"size":2271,"mtime":1613818313067,"results":"33","hashOfConfig":"32"},{"size":2204,"mtime":1613818097279,"results":"34","hashOfConfig":"32"},{"size":153,"mtime":1612010441764,"results":"35","hashOfConfig":"32"},{"size":1587,"mtime":1613800487314,"results":"36","hashOfConfig":"32"},{"size":2302,"mtime":1613972130421,"results":"37","hashOfConfig":"32"},{"size":2472,"mtime":1613804720887,"results":"38","hashOfConfig":"32"},{"size":3678,"mtime":1613799131931,"results":"39","hashOfConfig":"32"},{"size":2188,"mtime":1613799561974,"results":"40","hashOfConfig":"32"},{"size":2571,"mtime":1613818265860,"results":"41","hashOfConfig":"32"},{"size":4841,"mtime":1613811423214,"results":"42","hashOfConfig":"32"},{"size":897,"mtime":1613805044045,"results":"43","hashOfConfig":"32"},{"size":1319,"mtime":1613819012243,"results":"44","hashOfConfig":"32"},{"size":3558,"mtime":1613805572293,"results":"45","hashOfConfig":"32"},{"size":2132,"mtime":1612419832502,"results":"46","hashOfConfig":"32"},{"size":2249,"mtime":1613804119945,"results":"47","hashOfConfig":"32"},{"size":597,"mtime":1613803276177,"results":"48","hashOfConfig":"32"},{"size":2994,"mtime":1613803414844,"results":"49","hashOfConfig":"32"},{"size":3247,"mtime":1613799808795,"results":"50","hashOfConfig":"32"},{"size":955,"mtime":1613807600007,"results":"51","hashOfConfig":"32"},{"size":1055,"mtime":1612765705963,"results":"52","hashOfConfig":"32"},{"size":199,"mtime":1612762474606,"results":"53","hashOfConfig":"32"},{"size":1864,"mtime":1613799733781,"results":"54","hashOfConfig":"32"},{"size":1234,"mtime":1613801184236,"results":"55","hashOfConfig":"32"},{"size":2062,"mtime":1613818955180,"results":"56","hashOfConfig":"32"},{"size":568,"mtime":1613818476435,"results":"57","hashOfConfig":"32"},{"size":2568,"mtime":1612934881685,"results":"58","hashOfConfig":"32"},{"size":2888,"mtime":1613818718821,"results":"59","hashOfConfig":"32"},{"size":2648,"mtime":1613798761411,"results":"60","hashOfConfig":"32"},{"size":1819,"mtime":1613820510803,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1v14fpa",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"64"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"64"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"64"},"D:\\React\\event-management\\ems\\src\\index.js",[],["138","139"],"D:\\React\\event-management\\ems\\src\\App.js",[],"D:\\React\\event-management\\ems\\src\\components\\Header\\Header.js",["140"],"import React from 'react';\r\nimport { AiOutlineLogout, AiOutlineUser, AiOutlineUserAdd } from 'react-icons/ai';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {logout} from '../../actions/userActions';\r\n\r\nimport Styles from \"./Header.module.scss\";\r\nimport userIcon from '../../images/userIcon.png';\r\n\r\nconst Header = (props) => {\r\n\r\n    const logoutHandler = () => {\r\n        props.onLogout()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={Styles.Logo}>\r\n                <span>Events</span>\r\n            </div>\r\n\r\n            <div className={Styles.UserNav}>\r\n                {props.userLogin.userInfo\r\n                ? \r\n               ( <>\r\n                <Link to={`/user/`} className={Styles.LinkItem}>\r\n                    <p>{props.userLogin.userInfo.name}</p>\r\n                    <span>\r\n                        <AiOutlineUser/>\r\n                    </span>\r\n                </Link>\r\n                <Link to='/logout' className={Styles.LinkItem} onClick={logoutHandler}>\r\n                    <p>Logout</p>\r\n                    <span>\r\n                        <AiOutlineLogout/>\r\n                    </span>\r\n                </Link>\r\n                </>)\r\n                : (\r\n                    <>\r\n                        <Link to='/register' className={Styles.LinkItem}>\r\n                            <p>Register</p>\r\n                            <span>\r\n                                <AiOutlineUserAdd/>\r\n                            </span>\r\n                        </Link>\r\n                        <Link to='/login' className={Styles.LinkItem}>\r\n                        <p>Login</p>\r\n                        <span>\r\n                            <AiOutlineLogout/>\r\n                        </span>\r\n                    </Link>\r\n                    </>\r\n                  )\r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userLogin: state.userLogin\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(logout())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\r\n","D:\\React\\event-management\\ems\\src\\components\\Footer\\Footer.js",[],["141","142"],"D:\\React\\event-management\\ems\\src\\components\\Sidebar\\Sidebar.js",[],"D:\\React\\event-management\\ems\\src\\screens\\EventRegisterScreen\\EventRegisterScreen.js",["143"],"D:\\React\\event-management\\ems\\src\\screens\\EventListScreen\\EventListScreen.js",["144"],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { listEvents, deleteEvent } from '../../actions/eventActions';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Styles from './EventListScreen.module.scss';\r\nimport Loader from '../../components/Loader/Loader';\r\n\r\nconst EventListScreen = (props) => {\r\n\r\n    useEffect(() => {\r\n        if(props.userInfo){\r\n            props.onListEvents();\r\n        }else{\r\n            props.history.push('/login');\r\n        }\r\n    }, [props.userInfo]);\r\n\r\n    const deleteHandler = (event, id) => {\r\n        event.preventDefault();\r\n        props.onDeleteEvent(id);\r\n    }\r\n\r\n    return (\r\n        <div className={Styles.EventContainer}>\r\n            {props.loading || props.deleteLoading ? <Loader/> : \r\n            \r\n                <div className={Styles.Content}>\r\n                    <h1 className={Styles.HeadingPrimary}>All Events</h1>\r\n                    <ul className={Styles.EventList}>\r\n                        {props.listEvents.map(event => (\r\n                                <li className={Styles.EventItem} key={event.time + event.name}>\r\n                                <Link to={`/event/${event._id}/`} className={Styles.EventLink}>{event.name}</Link>\r\n                                <button className={Styles.Btn} onClick={(e) => deleteHandler(e,event._id)}>\r\n                                    <i className='fas fa-trash'></i>\r\n                                </button>\r\n                                </li>\r\n                        ))}\r\n                    </ul>\r\n                    {\r\n                        props.userInfo && props.userInfo.type === 'admin' \r\n                        ? (<Link to='/addevent' className={Styles.AddBtn}>\r\n                            <i className=\"fa fa-plus\"></i>\r\n                            <span>Add Event</span></Link>)\r\n                        : null\r\n                    }\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        listEvents: state.eventList.events,\r\n        loading: state.eventList.loading,\r\n        deleteLoading: state.eventDelete.loading,\r\n        userInfo: state.userLogin.userInfo\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onListEvents: () => dispatch(listEvents()),\r\n        onDeleteEvent: (id) => dispatch(deleteEvent(id))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EventListScreen);\r\n","D:\\React\\event-management\\ems\\src\\screens\\AddEventScreen\\AddEventScreen.js",["145"],"import React, { useState, useEffect } from 'react';\r\nimport { createEvent } from '../../actions/eventActions';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Styles from './AddEventScreen.module.scss';\r\n\r\nconst AddEventScreen = (props) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [startdate, setStartdate] = useState('');\r\n    const [enddate, setEnddate] = useState('');\r\n    const [organizer, setOrganizer] = useState('');\r\n\r\n    useEffect(() => {\r\n        if(!props.userInfo){\r\n            props.history.push('/login')\r\n        }\r\n    }, [])\r\n\r\n    const formSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        props.onEventCreate(\r\n            {\r\n             name, description, startdate, enddate, organizer\r\n            }\r\n        )\r\n        props.history.push('/events');\r\n    }\r\n\r\n    return (\r\n        <div className={Styles.FormContainer}>\r\n            <form className={Styles.Form} onSubmit={formSubmitHandler}>\r\n                <h1 className={Styles.HeadingPrimary}>Add Event</h1>\r\n                <div className={Styles.InputContainer}>\r\n                    <label className={Styles.InputLabel}>Name</label>\r\n                    <input\r\n                        type='text'\r\n                        className={Styles.Input}\r\n                        placeholder={name}\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)} />\r\n                </div>\r\n\r\n                <div className={Styles.InputContainer}>\r\n                    <label className={Styles.InputLabel}>Description</label>\r\n                    <textarea\r\n                        className={Styles.Input}\r\n                        placeholder={description}\r\n                        value={description}\r\n                        onChange={(e) => setDescription(e.target.value)}></textarea>\r\n                </div>\r\n\r\n                <div className={Styles.InputContainer}>\r\n                    <label className={Styles.InputLabel}>Start Date</label>\r\n                    <input\r\n                        type='date'\r\n                        className={Styles.Input}\r\n                        placeholder={startdate}\r\n                        value={startdate}\r\n                        onChange={(e) => setStartdate(e.target.value)} />\r\n                </div>\r\n                <div className={Styles.InputContainer}>\r\n                    <label className={Styles.InputLabel}>End date</label>\r\n                    <input\r\n                        type='date'\r\n                        className={Styles.Input}\r\n                        placeholder={enddate}\r\n                        value={enddate}\r\n                        onChange={(e) => setEnddate(e.target.value)} />\r\n                </div>\r\n                <div className={Styles.InputContainer}>\r\n                    <label className={Styles.InputLabel}>Organizer</label>\r\n                    <input\r\n                        type='text'\r\n                        className={Styles.Input}\r\n                        placeholder={organizer}\r\n                        value={organizer}\r\n                        onChange={(e) => setOrganizer(e.target.value)} />\r\n                </div>\r\n                <button type='submit' className={Styles.Btn}>Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userInfo: state.userLogin.userInfo\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onEventCreate: (event) => dispatch(createEvent(event))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddEventScreen);\r\n","D:\\React\\event-management\\ems\\src\\screens\\EventDetailScreen\\EventDetailScreen.js",["146"],"import React, {useEffect} from 'react';\r\nimport Styles from './EventDetailScreen.module.scss';\r\nimport img1 from '../../images/music.jpg';\r\nimport { Link } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {eventDetails} from '../../actions/eventActions';\r\n\r\nconst EventDetailScreen = (props) => {\r\n    const id = props.match.params.id;\r\n    console.log(id)\r\n\r\n    useEffect(() => {\r\n        if(props.userInfo){\r\n            props.onEventDetails(id);\r\n        }else{\r\n            props.history.push('/login');\r\n        }\r\n    },[props.match.params.id])\r\n\r\n    return (\r\n        <>\r\n            <div className={Styles.Hero}>\r\n                <h2 className={Styles.SecondaryHeading}>\r\n                   <span> Unplugged Festival</span>\r\n                </h2>\r\n            </div>\r\n            <div className={Styles.Container}>\r\n                <div className={Styles.LeftContainer}>\r\n                    <img src={img1} alt='music'/>\r\n                </div>\r\n                <div className={Styles.RightContainer}>\r\n                    <h1 className={Styles.HeadingPrimary}>\r\n                        {props.event.name}\r\n                    </h1>\r\n                    <p className={Styles.Meta}> <span>Start Date:</span> {props.event.startdate}</p>\r\n                    <p className={Styles.Meta}> <span>End Date:</span> {props.event.enddate}</p>\r\n                    <p className={Styles.Meta}> <span>Organized By:</span> {props.event.organizer}</p>\r\n                </div>\r\n            </div>\r\n            <div className={Styles.Description}>\r\n                <p className={Styles.Desc}>\r\n                    {props.event.description}\r\n                </p>\r\n                <Link to={`/event/${props.event._id}/register/`} className={Styles.Btn}>Register</Link>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n   return {\r\n        event: state.eventDetails.event,\r\n        userInfo: state.userLogin.userInfo\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onEventDetails: (id) => dispatch(eventDetails(id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EventDetailScreen);\r\n","D:\\React\\event-management\\ems\\src\\screens\\VolunteerListScreen\\VolunteerListScreen.js",["147"],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { deleteVolunteer, listVolunteers } from '../../actions/volunteerActions';\r\nimport Styles from './VolunteerListScreen.module.scss';\r\nimport Loader from '../../components/Loader/Loader';\r\n\r\nconst VolunteerListScreen = (props) => {\r\n\r\n    useEffect(() => {\r\n        if(props.userInfo){\r\n            props.onListVolunteers();\r\n        }else{\r\n            props.history.push('/login');\r\n        }\r\n    },[props.onListVolunteers, props.successDelete]);\r\n\r\n    const deleteHanlder = (id) => {\r\n        props.onDeleteVolunteer(id)\r\n    }\r\n\r\n    return (\r\n        <div className={Styles.VolunteerContainer}>\r\n            {props.loading ? <Loader/> : (\r\n                <div className={Styles.Content}>\r\n                    <h1 className={Styles.HeadingPrimary}>All Volunteers</h1>\r\n                    <ul className={Styles.VolunteerList}>\r\n                        {props.volunteers.map(volunteer => (\r\n                            <li className={Styles.VolunteerItem} key={volunteer._id}>\r\n                            <Link to={`/user/${volunteer._id}`} className={Styles.VolunteerLink}>{volunteer.name}</Link>\r\n                            <button className={Styles.Btn} onClick={() => deleteHanlder(volunteer._id)}>\r\n                                <i className='fas fa-trash'></i>\r\n                            </button>\r\n                        </li>\r\n                        ))}\r\n                    </ul>\r\n\r\n                     {\r\n                        props.userInfo && props.userInfo.type === 'admin' \r\n                        ? (<Link to='/addvolunteer' className={Styles.AddBtn}>\r\n                        <i className=\"fa fa-plus\"></i>\r\n                        <span>Add Volunteer</span></Link>)\r\n                        : null\r\n                    }\r\n                    \r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        volunteers: state.volunteerList.volunteers,\r\n        loading: state.volunteerList.loading,\r\n        userInfo: state.userLogin.userInfo,\r\n        successDelete: state.volunteerDelete.success,\r\n        loadingDelete: state.volunteerDelete.loading,\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onListVolunteers: () => dispatch(listVolunteers()),\r\n        onDeleteVolunteer: (id) => dispatch(deleteVolunteer(id))\r\n    }\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VolunteerListScreen);","D:\\React\\event-management\\ems\\src\\actions\\eventActions.js",["148","149"],"import axios from 'axios';\r\nimport SendHttpRequest from '../utils/SendHttpRequest';\r\nimport {\r\n    EVENT_LIST_REQUEST,\r\n    EVENT_LIST_SUCCESS,\r\n    EVENT_LIST_FAIL,\r\n    EVENT_CREATE_REQUEST,\r\n    EVENT_CREATE_SUCCESS,\r\n    EVENT_CREATE_FAIL,\r\n    EVENT_DETAILS_REQUEST,\r\n    EVENT_DETAILS_SUCCESS,\r\n    EVENT_DETAILS_FAIL,\r\n    EVENT_DELETE_REQUEST,\r\n    EVENT_DELETE_SUCCESS,\r\n    EVENT_DELETE_FAIL,\r\n    EVENT_REGISTER_REQUEST,\r\n    EVENT_REGISTER_SUCCESS,\r\n    EVENT_REGISTER_FAIL\r\n} from '../constants/eventConstants';\r\nimport sendHttpRequest from '../utils/SendHttpRequest';\r\n\r\nexport const listEvents = () => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            dispatch({ type: EVENT_LIST_REQUEST });\r\n\r\n            const { userLogin } = getState();\r\n            const { token } = userLogin;\r\n\r\n            let data = await SendHttpRequest('GET', '/user/events', null, token );\r\n            console.log(data);\r\n\r\n            // fetching data into array.\r\n            const fetchedEvents = [];\r\n            for(let key in data.events){\r\n                fetchedEvents.push(data.events[key])\r\n            }  \r\n\r\n            dispatch({\r\n                type: EVENT_LIST_SUCCESS,\r\n                payload: fetchedEvents\r\n            })\r\n\r\n             // Saving the events to the local storage\r\n            // let eventList = {};\r\n            // for (let event of fetchedEvents){\r\n            //     eventList[event._id] = {...event}\r\n            // }\r\n            localStorage.setItem('events', JSON.stringify(fetchedEvents));\r\n\r\n        } catch (error) {\r\n            dispatch({\r\n                type: EVENT_LIST_FAIL,\r\n                payload: error\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport const eventDetails = (id) => {\r\n    return async dispatch => {\r\n        try{\r\n            dispatch({type: EVENT_DETAILS_REQUEST});\r\n            console.log(id)\r\n            const eventsFetchedFromLocalStorage = JSON.parse(localStorage.getItem('events'));\r\n            const event = eventsFetchedFromLocalStorage.find(event => {\r\n                console.log(event._id)\r\n                return id === event._id\r\n            })\r\n\r\n            console.log(event)\r\n\r\n            dispatch({type: EVENT_DETAILS_SUCCESS, payload: event});\r\n        }catch(err) {\r\n            dispatch({type:EVENT_DETAILS_FAIL, error: err})\r\n        }\r\n    }\r\n}\r\n\r\nexport const createEvent = (event) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            dispatch({ type: EVENT_CREATE_REQUEST });\r\n            let url = '';\r\n            \r\n            url = \"/user/add-event/\";\r\n\r\n            const { userLogin } = getState();\r\n            const { token } = userLogin;\r\n\r\n            let eventData = new FormData();\r\n           \r\n            eventData.append('name', event['name'])\r\n            eventData.append('description', event['description'])\r\n            eventData.append('startdate', event['startdate'])\r\n            eventData.append('enddate', event['enddate'])\r\n            eventData.append('organizer', event['organizer'])\r\n\r\n            // const { data } = await axios.post(url, eventData, config);\r\n            const data = await SendHttpRequest('POST', url, eventData, token);\r\n\r\n            const fetchedEvents = [];\r\n            for (let key in data){\r\n                fetchedEvents.push({\r\n                    ...data[key]\r\n                });\r\n            }\r\n            dispatch({\r\n                type: EVENT_CREATE_SUCCESS,\r\n                payload: fetchedEvents\r\n            });\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch({ type: EVENT_CREATE_FAIL, error: error });\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteEvent = (id) => {\r\n    return async (dispatch, getState) => {\r\n        try{\r\n            dispatch({type: EVENT_DELETE_REQUEST});\r\n\r\n            const {userLogin} = getState();\r\n            const {token} = userLogin;\r\n\r\n            await SendHttpRequest('DELETE', `user/delete-event/${id}`, null, token);\r\n            dispatch(listEvents())\r\n\r\n            dispatch({type: EVENT_DELETE_SUCCESS});\r\n        }catch(error){\r\n            dispatch({type: EVENT_DELETE_FAIL, error: error})\r\n        }\r\n    }\r\n}\r\n\r\nexport const registerEvent= (eventId, userId) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            dispatch({type: EVENT_REGISTER_REQUEST});\r\n\r\n            const {userLogin} = getState();\r\n            const {token} = userLogin;\r\n\r\n            const userData = new FormData();\r\n            userData.append('userId', userId);\r\n\r\n            let data = await SendHttpRequest('POST', `/user/register/${eventId}`, userData, token);\r\n\r\n            dispatch({type: EVENT_REGISTER_SUCCESS, payload: data});\r\n        } catch (error) {\r\n\r\n            dispatch({type: EVENT_REGISTER_FAIL, error: error});\r\n        }\r\n    }\r\n}","D:\\React\\event-management\\ems\\src\\constants\\eventConstants.js",[],"D:\\React\\event-management\\ems\\src\\store.js",[],"D:\\React\\event-management\\ems\\src\\reducers\\eventReducers.js",[],"D:\\React\\event-management\\ems\\src\\components\\Loader\\Loader.js",[],"D:\\React\\event-management\\ems\\src\\reducers\\volunteerReducers.js",[],"D:\\React\\event-management\\ems\\src\\constants\\volunteerConstants.js",[],"D:\\React\\event-management\\ems\\src\\actions\\volunteerActions.js",["150"],"import axios from 'axios';\r\nimport SendHttpRequest from '../utils/SendHttpRequest';\r\n\r\nimport {\r\n    VOLUNTEER_LIST_REQUEST,\r\n    VOLUNTEER_LIST_SUCCESS,\r\n    VOLUNTEER_LIST_FAIL,\r\n    VOLUNTEER_CREATE_REQUEST,\r\n    VOLUNTEER_CREATE_SUCCESS,\r\n    VOLUNTEER_CREATE_FAIL,\r\n    VOLUNTEER_DELETE_REQUEST,\r\n    VOLUNTEER_DELETE_SUCCESS,\r\n    VOLUNTEER_DELETE_FAIL\r\n} from '../constants/volunteerConstants';\r\n\r\nexport const listVolunteers = () => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            dispatch({ type: VOLUNTEER_LIST_REQUEST });\r\n\r\n            const { userLogin } = getState();\r\n            const { token } = userLogin;\r\n            let data = await SendHttpRequest('GET', '/user/volunteers', null, token);\r\n\r\n            const fetchedVolunteer = [];\r\n            for(let key in data.volunteers){\r\n                fetchedVolunteer.push(data.volunteers[key])\r\n            }  \r\n\r\n            dispatch({\r\n                type: VOLUNTEER_LIST_SUCCESS,\r\n                payload: fetchedVolunteer\r\n            })\r\n\r\n         \r\n        } catch (error) {\r\n            console.log(error)\r\n            dispatch({\r\n                type: VOLUNTEER_LIST_FAIL,\r\n                payload: error\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\nexport const createVolunteer = (volunteer) => {\r\n    return async (dispatch, getState) => {\r\n        try{\r\n            dispatch({type: VOLUNTEER_CREATE_REQUEST});\r\n\r\n\r\n            let url = \"/admin/add-volunteer/\";\r\n\r\n            const { useLogin } = getState();\r\n            const {token} = useLogin;\r\n\r\n            let volunteerData = new FormData();\r\n           \r\n            volunteerData.append('name', volunteer['name'])\r\n            volunteerData.append('email', volunteer['email'])\r\n            volunteerData.append('password', volunteer['password'])\r\n            volunteerData.append('type', volunteer['type'])\r\n\r\n            const data = await SendHttpRequest('POST', url, volunteerData, token);\r\n\r\n            const fetchedVolunteers = [];\r\n            for (let key in data){\r\n                fetchedVolunteers.push({\r\n                    ...data[key]\r\n                });\r\n            }\r\n            dispatch({\r\n                type: VOLUNTEER_CREATE_SUCCESS,\r\n                payload: fetchedVolunteers\r\n            });\r\n\r\n        }catch(error){\r\n            console.log(error);\r\n            dispatch({type: VOLUNTEER_CREATE_FAIL, error: error});\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const deleteVolunteer = (id) => {\r\n    return async (dispatch, getState) => {\r\n        try{\r\n            dispatch({type: VOLUNTEER_DELETE_REQUEST});\r\n\r\n            const {userLogin} = getState();\r\n            const {token} = userLogin;\r\n\r\n            await SendHttpRequest('DELETE', `user/delete-volunteer/${id}`, null, token);\r\n            \r\n            dispatch({type: VOLUNTEER_DELETE_SUCCESS});\r\n            dispatch(listVolunteers())\r\n        }catch(error){\r\n            dispatch({type: VOLUNTEER_DELETE_FAIL, error: error})\r\n        }\r\n    }\r\n}","D:\\React\\event-management\\ems\\src\\screens\\AddVolunteerScreen\\AddVolunteerScreen.js",["151"],"import React, { useState, useEffect } from 'react';\r\nimport { createVolunteer } from '../../actions/volunteerActions';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Styles from './AddVolunteerScreen.module.scss';\r\n\r\nconst AddVolunteerScreen = (props) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [type, setType] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    // const [events, setEvents] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if(!props.userInfo){\r\n            props.history.push('/login')\r\n        }\r\n    }, [])\r\n\r\n    const formSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        props.onVolunteerCreate(\r\n            {\r\n             name, email, type, password\r\n            }\r\n        )\r\n        props.history.push('/volunteers');\r\n    }\r\n\r\n    return (\r\n        <div className={Styles.FormContainer}>\r\n            <form className={Styles.Form} onSubmit={formSubmitHandler}>\r\n                <h1 className={Styles.HeadingPrimary}>Add Volunteer</h1>\r\n                <div className={Styles.InputContainer}>\r\n                    <label className={Styles.InputLabel}>Name</label>\r\n                    <input\r\n                        type='text'\r\n                        className={Styles.Input}\r\n                        placeholder={name}\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)} />\r\n                </div>\r\n\r\n                <div className={Styles.InputContainer}>\r\n                    <label className={Styles.InputLabel}>Email</label>\r\n                    <input\r\n                        type='email'\r\n                        className={Styles.Input}\r\n                        placeholder={email}\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}/>\r\n                </div>\r\n\r\n                <div className={Styles.InputContainer}>\r\n                    <label className={Styles.InputLabel}>Password</label>\r\n                    <input\r\n                        type='password'\r\n                        className={Styles.Input}\r\n                        placeholder={password}\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)} />\r\n                </div>\r\n               \r\n                <div className={Styles.InputContainer}>\r\n                    <label className={Styles.InputLabel}>Type</label>\r\n                    <input\r\n                        type='text'\r\n                        className={Styles.Input}\r\n                        placeholder={type}\r\n                        value={type}\r\n                        onChange={(e) => setType(e.target.value)} />\r\n                </div>\r\n                <button type='submit' className={Styles.Btn}>Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userInfo: state.userLogin.userInfo\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onVolunteerCreate: (volunteer) => dispatch(createVolunteer(volunteer))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddVolunteerScreen);\r\n","D:\\React\\event-management\\ems\\src\\utils\\SendHttpRequest.js",[],"D:\\React\\event-management\\ems\\src\\reducers\\participantReducers.js",[],"D:\\React\\event-management\\ems\\src\\constants\\participantConstants.js",[],"D:\\React\\event-management\\ems\\src\\screens\\ParticipantListScreen\\ParticipantListScreen.js",["152"],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { listParticipants } from '../../actions/participantActions';\r\nimport Styles from './ParticipantListScreen.module.scss';\r\nimport Loader from '../../components/Loader/Loader';\r\n\r\nconst ParticipantListScreen = (props) => {\r\n\r\n    useEffect(() => {\r\n        if(props.userInfo){\r\n            props.onListParticipants();\r\n        }else{\r\n            props.history.push('/login');\r\n        }\r\n    },[props.onListParticipants]);\r\n\r\n    return (\r\n        <div className={Styles.ParticipantContainer}>\r\n            {props.loading ? <Loader/> : (\r\n                <div className={Styles.Content}>\r\n                    <h1 className={Styles.HeadingPrimary}>All Participants</h1>\r\n                    <ul className={Styles.ParticipantList}>\r\n                        {props.participants.map(participant => (\r\n                            <li className={Styles.ParticipantItem}>\r\n                            <Link to='/participant/1' className={Styles.ParticipantLink}>{participant.name}</Link>\r\n                            <button className={Styles.Btn}>\r\n                                <i className='fas fa-trash'></i>\r\n                            </button>\r\n                        </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        participants: state.participantList.participants,\r\n        loading: state.participantList.loading,\r\n        userInfo: state.userLogin.userInfo\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onListParticipants: () => dispatch(listParticipants())\r\n    }\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ParticipantListScreen);","D:\\React\\event-management\\ems\\src\\actions\\participantActions.js",["153"],"import axios from 'axios';\r\nimport {\r\n    PARTICIPANT_LIST_REQUEST,\r\n    PARTICIPANT_LIST_SUCCESS,\r\n    PARTICIPANT_LIST_FAIL\r\n} from '../constants/participantConstants';\r\nimport sendHttpRequest from '../utils/SendHttpRequest';\r\n\r\nexport const listParticipants = () => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            dispatch({ type: PARTICIPANT_LIST_REQUEST });\r\n\r\n            const {userLogin} = getState();\r\n            const {token} = userLogin;\r\n            console.log(userLogin)\r\n\r\n            // let {data} = await axios.get('/admin/participants');\r\n            let data = await sendHttpRequest('GET', 'user/participants',null, token);\r\n\r\n            const fetchedParticipant = [];\r\n            for(let key in data.participants){\r\n                fetchedParticipant.push(data.participants[key])\r\n            }  \r\n            console.log(\"Inside participant actions********8888888\")\r\n\r\n            dispatch({\r\n                type: PARTICIPANT_LIST_SUCCESS,\r\n                payload: fetchedParticipant\r\n            })\r\n\r\n         \r\n        } catch (error) {\r\n            dispatch({\r\n                type: PARTICIPANT_LIST_FAIL,\r\n                payload: error\r\n            });\r\n        }\r\n    }\r\n};\r\n","D:\\React\\event-management\\ems\\src\\reducers\\userReducers.js",[],"D:\\React\\event-management\\ems\\src\\constants\\userConstants.js",[],"D:\\React\\event-management\\ems\\src\\screens\\UserRegisterScreen\\UserRegisterScreen.js",["154"],"import React, {useState, useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { userRegister } from '../../actions/userActions';\r\n\r\nimport Styles from './UserRegisterScreen.module.scss';\r\n\r\nconst UserRegisterScreen = (props) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isVolunteer, setIsVolunteer] = useState(false);\r\n\r\n\r\n    const formSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        props.onUserRegister(\r\n            {\r\n             name, email, password, isVolunteer\r\n            }\r\n        )\r\n        props.history.push('/login');\r\n    }\r\n\r\n    return (\r\n        <div className={Styles.FormContainer}>\r\n            <form className={Styles.Form} onSubmit={formSubmitHandler}>\r\n            <h1 className={Styles.HeadingPrimary}>User Registration</h1>\r\n                <div className={Styles.InputContainer}>\r\n                    <label className={Styles.InputLabel}>Username</label>\r\n                    <input type='text' className={Styles.Input} placeholder='Username' value={name} onChange={(e) => setName(e.target.value)}/>\r\n                </div>\r\n                <div className={Styles.InputContainer}>\r\n                    <label className={Styles.InputLabel}>Email</label>\r\n                    <input type='email' className={Styles.Input} placeholder='Email' value={email}  onChange={(e) => setEmail(e.target.value)}/>\r\n                </div>\r\n                <div className={Styles.InputContainer}>\r\n                    <label className={Styles.InputLabel}>Password</label>\r\n                    <input type='password' className={Styles.Input} placeholder='Password' value={password}  onChange={(e) => setPassword(e.target.value)}/>\r\n                </div>\r\n                <div className={Styles.InputContainer}>\r\n                    <div className={Styles.CheckBoxContainer}>\r\n                        <label className={Styles.InputLabel}>Is Volunteer</label>\r\n                        <input type='checkbox' className={Styles.CheckBox}  name='IsVolunteer' value={isVolunteer}  onChange={(e) => setIsVolunteer(prev=> !prev)}/>\r\n                    </div>\r\n                </div>\r\n                <button type='submit' className={Styles.Btn}>Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onUserRegister: (user) => dispatch(userRegister(user)) \r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(UserRegisterScreen);\r\n","D:\\React\\event-management\\ems\\src\\actions\\userActions.js",["155"],"import axios from 'axios';\r\nimport SendHttpRequest from '../utils/SendHttpRequest';\r\nimport {\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_DETAIL_REQUEST,\r\n    USER_DETAIL_SUCCESS,\r\n    USER_DETAIL_FAIL,\r\n} from '../constants/userConstants';\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('events');\r\n    dispatch({type: USER_LOGOUT});\r\n    document.location.href = '/login'\r\n}\r\n\r\nexport const userRegister = (inputData) => {\r\n    return async (dispatch, getState )=> {\r\n        try{\r\n            dispatch({type: USER_REGISTER_REQUEST});\r\n\r\n            const userData = new FormData();\r\n\r\n            userData.append('name', inputData.name);\r\n            userData.append('email', inputData.email);\r\n            userData.append('password', inputData.password);\r\n\r\n            let url = '/register/participant'\r\n\r\n            if(inputData.isVolunteer){\r\n                url = '/register/volunteer';\r\n            }\r\n\r\n            const data = await SendHttpRequest('POST', url, userData);\r\n\r\n            dispatch({type: USER_REGISTER_SUCCESS, payload: data});\r\n\r\n        }catch(error){\r\n            dispatch({type: USER_REGISTER_FAIL, error: error});\r\n        }\r\n    }\r\n}\r\n\r\nexport const userLogin = (inputData) => {\r\n    return async (dispatch,  getState) => {\r\n        try{\r\n            dispatch({type: USER_LOGIN_REQUEST});\r\n\r\n            // const { userRegister } = getState();\r\n            // const { userInfo } = userRegister;\r\n            console.log(inputData);\r\n\r\n            const userData = new FormData();\r\n            userData.append('email', inputData['email']);\r\n            userData.append('password', inputData['password']);\r\n            userData.append('type', inputData['type']);\r\n\r\n            let url = '/login'\r\n\r\n            const data = await SendHttpRequest('POST', url, userData);\r\n            const {accesstoken, user, refreshtoken} = data;\r\n\r\n            dispatch({\r\n                type: USER_LOGIN_SUCCESS, \r\n                token: accesstoken, \r\n                userInfo: user, \r\n                refreshToken: refreshtoken\r\n            });\r\n            \r\n        }catch(error){\r\n            console.log(error)\r\n            dispatch({type: USER_LOGIN_FAIL, error: error});\r\n        }\r\n    }\r\n}\r\n\r\nexport const getUserDetail = (id) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            dispatch({type: USER_DETAIL_REQUEST})\r\n\r\n            const {userLogin} = getState();\r\n            const {token} = userLogin;\r\n\r\n            let data = await SendHttpRequest('GET', `/user/${id}`, null, token);\r\n\r\n            dispatch({type: USER_DETAIL_SUCCESS, payload: data});\r\n        } catch (error) {\r\n            dispatch({type: USER_DETAIL_FAIL, error: error});\r\n        }\r\n    }\r\n}","D:\\React\\event-management\\ems\\src\\screens\\UserLoginScreen\\UserLoginScreen.js",["156","157"],"import React, {useState, useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { userLogin } from '../../actions/userActions';\r\nimport Loader from '../../components/Loader/Loader';\r\n\r\nimport Styles from './UserLoginScreen.module.scss';\r\n\r\nconst UserLoginScreen = (props) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [type, setType] = useState('');\r\n\r\n\r\n    const formSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        props.onUserLogin(\r\n            {\r\n              email, password, type\r\n            }\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.userLogin.userInfo){\r\n            props.history.push('/');\r\n        }\r\n    }, [props.userLogin])\r\n\r\n    return (\r\n        <div className={Styles.FormContainer}>\r\n            {props.loading ? <Loader/> : \r\n                <form className={Styles.Form} onSubmit={formSubmitHandler}>\r\n                <h1 className={Styles.HeadingPrimary}>User Login</h1>\r\n                    <div className={Styles.InputContainer}>\r\n                        <label className={Styles.InputLabel}>Email</label>\r\n                        <input type='email' className={Styles.Input} placeholder='Email' value={email}  onChange={(e) => setEmail(e.target.value)}/>\r\n                    </div>\r\n                    <div className={Styles.InputContainer}>\r\n                        <label className={Styles.InputLabel}>Password</label>\r\n                        <input type='password' className={Styles.Input} placeholder='Password' value={password}  onChange={(e) => setPassword(e.target.value)}/>\r\n                    </div>\r\n                    <div className={Styles.InputContainer} >\r\n                        <select className={Styles.Input} onChange={(e) => setType(e.target.value)}>\r\n                            <option value=\"volunteer\">Volunteer</option>\r\n                            <option value=\"participant\">Participant</option>\r\n                            <option value=\"admin\">Admin</option>\r\n                        </select>\r\n                    </div>\r\n                    <button type='submit' className={Styles.Btn}>Submit</button>\r\n                </form>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.userLogin.loading,\r\n        userLogin: state.userLogin\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onUserLogin: (user) => dispatch(userLogin(user)) \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserLoginScreen);\r\n","D:\\React\\event-management\\ems\\src\\screens\\UserDetailScreen\\UserDetailScreen.js",["158"],"import React,{useEffect} from 'react';\r\nimport Styles from './UserDetailScreen.module.scss';\r\nimport userIcon from '../../images/userIcon.png';\r\nimport Loader from '../../components/Loader/Loader';\r\nimport {connect} from 'react-redux';\r\nimport { getUserDetail } from '../../actions/userActions';\r\n\r\nconst UserDetailScreen = (props) => {\r\n    const userId = props.match.params.id;\r\n\r\n    useEffect(() => {\r\n        if(!props.userInfo){\r\n            props.history.push('/login')\r\n        }else{\r\n            props.onGetUserDetail(userId);\r\n        }\r\n    }, [userId]);\r\n\r\n    return (\r\n        <div className={Styles.Container}>\r\n        {props.loading ? <Loader/> : props.userDetail ? (\r\n            <div className={Styles.Content}>\r\n                    <div className={Styles.Top}>\r\n                        <div className={Styles.ImgContainer}>\r\n                            <img src={userIcon} alt=\"user icon\"/>\r\n                        </div>\r\n                        <div className={Styles.Meta}>\r\n                            <p className={Styles.Name}>{props.userDetail.user.name}</p>\r\n                            <p className={Styles.Email}>{props.userDetail.user.email}</p>\r\n                            <p className={Styles.Type}>{props.userDetail.user.type}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        ):null}\r\n        </div>\r\n    )           \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userInfo: state.userLogin.userInfo,\r\n        userDetail: state.userDetail.userDetail,\r\n        loading: state.userDetail.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onGetUserDetail: (id) => dispatch(getUserDetail(id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserDetailScreen);\r\n",{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":8,"column":8,"nodeType":"165","messageId":"166","endLine":8,"endColumn":16},{"ruleId":"159","replacedBy":"167"},{"ruleId":"161","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":16,"column":8,"nodeType":"171","endLine":16,"endColumn":17,"suggestions":"172"},{"ruleId":"169","severity":1,"message":"173","line":17,"column":8,"nodeType":"171","endLine":17,"endColumn":24,"suggestions":"174"},{"ruleId":"169","severity":1,"message":"175","line":19,"column":8,"nodeType":"171","endLine":19,"endColumn":10,"suggestions":"176"},{"ruleId":"169","severity":1,"message":"177","line":19,"column":7,"nodeType":"171","endLine":19,"endColumn":30,"suggestions":"178"},{"ruleId":"169","severity":1,"message":"173","line":17,"column":7,"nodeType":"171","endLine":17,"endColumn":52,"suggestions":"179"},{"ruleId":"163","severity":1,"message":"180","line":1,"column":8,"nodeType":"165","messageId":"166","endLine":1,"endColumn":13},{"ruleId":"163","severity":1,"message":"181","line":20,"column":8,"nodeType":"165","messageId":"166","endLine":20,"endColumn":23},{"ruleId":"163","severity":1,"message":"180","line":1,"column":8,"nodeType":"165","messageId":"166","endLine":1,"endColumn":13},{"ruleId":"169","severity":1,"message":"175","line":19,"column":8,"nodeType":"171","endLine":19,"endColumn":10,"suggestions":"182"},{"ruleId":"169","severity":1,"message":"173","line":17,"column":7,"nodeType":"171","endLine":17,"endColumn":33,"suggestions":"183"},{"ruleId":"163","severity":1,"message":"180","line":1,"column":8,"nodeType":"165","messageId":"166","endLine":1,"endColumn":13},{"ruleId":"163","severity":1,"message":"184","line":1,"column":26,"nodeType":"165","messageId":"166","endLine":1,"endColumn":35},{"ruleId":"163","severity":1,"message":"180","line":1,"column":8,"nodeType":"165","messageId":"166","endLine":1,"endColumn":13},{"ruleId":"163","severity":1,"message":"185","line":3,"column":10,"nodeType":"165","messageId":"166","endLine":3,"endColumn":18},{"ruleId":"169","severity":1,"message":"186","line":29,"column":8,"nodeType":"171","endLine":29,"endColumn":25,"suggestions":"187"},{"ruleId":"169","severity":1,"message":"173","line":17,"column":8,"nodeType":"171","endLine":17,"endColumn":16,"suggestions":"188"},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"no-unused-vars","'userIcon' is defined but never used.","Identifier","unusedVar",["189"],["190"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.events', 'props.history', and 'props.userInfo'. Either include them or remove the dependency array.","ArrayExpression",["191"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["192"],"React Hook useEffect has missing dependencies: 'props.history' and 'props.userInfo'. Either include them or remove the dependency array.",["193"],"React Hook useEffect has missing dependencies: 'id' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["194"],["195"],"'axios' is defined but never used.","'sendHttpRequest' is defined but never used.",["196"],["197"],"'useEffect' is defined but never used.","'Redirect' is defined but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["198"],["199"],"no-global-assign","no-unsafe-negation",{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"204","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},"Update the dependencies array to be: [eventId, props.events, props.history, props.userInfo]",{"range":"217","text":"218"},"Update the dependencies array to be: [props, props.userInfo]",{"range":"219","text":"220"},"Update the dependencies array to be: [props.history, props.userInfo]",{"range":"221","text":"222"},"Update the dependencies array to be: [id, props, props.match.params.id]",{"range":"223","text":"224"},"Update the dependencies array to be: [props, props.onListVolunteers, props.successDelete]",{"range":"225","text":"226"},{"range":"227","text":"222"},"Update the dependencies array to be: [props, props.onListParticipants]",{"range":"228","text":"229"},"Update the dependencies array to be: [props.history, props.userLogin]",{"range":"230","text":"231"},"Update the dependencies array to be: [props, userId]",{"range":"232","text":"233"},[558,567],"[eventId, props.events, props.history, props.userInfo]",[511,527],"[props, props.userInfo]",[615,617],"[props.history, props.userInfo]",[551,574],"[id, props, props.match.params.id]",[534,579],"[props, props.onListVolunteers, props.successDelete]",[608,610],[527,553],"[props, props.onListParticipants]",[787,804],"[props.history, props.userLogin]",[556,564],"[props, userId]"]